// Code generated by tools. DO NOT EDIT!
package testdata
import (
	"bytes"
	"database/sql/driver"
	
	"github.com/shrewx/enum"
)

func (v Animal) Int() int {
	return int(v)
}

func (v Animal) String() string {
	switch v { 
	case ANIMAL__DOG:
		return "DOG"
	case ANIMAL__CAT:
		return "CAT"
	case ANIMAL__FISH:
		return "FISH"
	}
	return ""
}

func (v Animal) Label() string {
	switch v { 
	case ANIMAL__DOG:
		return "狗"
	case ANIMAL__CAT:
		return "猫"
	case ANIMAL__FISH:
		return "鱼"
	}
	return ""
}

func (v Animal) Values() []enum.Enum {
	return []enum.Enum{ ANIMAL__DOG,ANIMAL__CAT,ANIMAL__FISH }
}

func (v Animal) Type() string {
	return "github.com/shrewx/enum/testdata.Animal"
}

func (v Animal) MarshalText() ([]byte, error) {
	switch v {
	case ANIMAL__DOG,ANIMAL__CAT,ANIMAL__FISH:
		return []byte(v.String()), nil
	default:
		return nil, enum.InvalidTypeError
	}
}

func (v *Animal) UnmarshalText(text []byte) error {
	switch string(bytes.ToUpper(text)) { 
	case ANIMAL__DOG.String():
		*v = ANIMAL__DOG
	case ANIMAL__CAT.String():
		*v = ANIMAL__CAT
	case ANIMAL__FISH.String():
		*v = ANIMAL__FISH
	default:
		return enum.InvalidTypeError
	}

	return nil
}

func (v *Animal) Scan(value interface{}) error {
	*v = Animal(value.(int))
	return nil
}

func (v *Animal) Value() (driver.Value, error) {
	return int(*v), nil
}
