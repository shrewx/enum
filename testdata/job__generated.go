// Code generated by tools. DO NOT EDIT!
package testdata
import (
	
	"database/sql/driver"
	
	"github.com/shrewx/enum"
)

func (v Job) Int() int {
	return 0
}

func (v Job) String() string {
	switch v { 
	case JOB__DOCTOR:
		return "doctor"
	case JOB__DRIVER:
		return "driver"
	case JOB__TEACHER:
		return "teacher"
	}
	return ""
}

func (v Job) Label() string {
	switch v { 
	case JOB__DOCTOR:
		return "医生"
	case JOB__DRIVER:
		return "司机"
	case JOB__TEACHER:
		return "老师"
	}
	return ""
}

func (v Job) Values() []enum.Enum {
	return []enum.Enum{ JOB__DOCTOR,JOB__DRIVER,JOB__TEACHER }
}

func (v Job) Type() string {
	return "github.com/shrewx/enum/testdata.Job"
}

func (v Job) MarshalText() ([]byte, error) {
	switch v {
	case JOB__DOCTOR,JOB__DRIVER,JOB__TEACHER:
		return []byte(v.String()), nil
	default:
		return nil, enum.InvalidTypeError
	}
}

func (v *Job) UnmarshalText(text []byte) error {
	switch string(text) { 
	case JOB__DOCTOR.String():
		*v = JOB__DOCTOR
	case JOB__DRIVER.String():
		*v = JOB__DRIVER
	case JOB__TEACHER.String():
		*v = JOB__TEACHER
	default:
		return enum.InvalidTypeError
	}

	return nil
}

func (v *Job) Scan(value interface{}) error {
	*v = Job(value.(string))
	return nil
}

func (v *Job) Value() (driver.Value, error) {
	return string(*v), nil
}
